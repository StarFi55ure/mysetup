#!/usr/bin/python3

import sh

def get_sessions():
    try:
        sessions_output = sh.tmux('list-sessions')
        sessions = [s.split(' ')[0][:-1] for s in sessions_output]
        return sessions
    except sh.ErrorReturnCode_1:
        return []

# setup Main

if 'Main' in get_sessions():
    print('Main exisis')
else:
    print('Creating Main Session')
    sh.tmux('new-session',
            '-d',
            '-c', '/home/julian/projects',
            '-n', 'main',
            '-s', 'Main')
    sh.tmux('send', "ll\n")

# setup TerreXplor

if 'TerreX' in get_sessions():
    print('TerreX exists')
else:
    print('Creating TerreX session')
    sh.tmux('new-session',
            '-d',
            '-c', '/home/julian/projects/terrexplor',
            '-n', 'tiles',
            '-s', 'TerreX')
    sh.tmux('send', 'cd tiles/server\n')
    sh.tmux('send', 'pact\n')
    sh.tmux('send', 'pyenv/bin/tx-tile-server\n')

    sh.tmux('new-window',
            '-n', 'ng-serve')
    sh.tmux('send', 'cd /home/julian/projects/terrexplor/core/webapp\n')
    sh.tmux('send', 'ng serve --watch\n')

    sh.tmux('split-window', '-h')
    sh.tmux('send', 'cd /home/julian/projects/terrexplor/core/webapp\n')

    sh.tmux('new-window',
            '-n', 'dbsetup')
    sh.tmux('send', 'cd /home/julian/projects/terrexplor/dbsetup\n')

    sh.tmux('new-window',
            '-n', 'main')
    sh.tmux('send', 'cd /home/julian/projects/terrexplor\n')
    sh.tmux('send', 'git status\n')

# setup Logimeter Work Setup

CELERY_RR_WORKER_CMD = 'celery -A logiport worker -n worker-rr@%h -Q roundrobin -c 1 -l INFO'
if 'Logimeter' in get_sessions():
    print('Logimeter exists')
else:
    print('Creating Logimeter session')
    sh.tmux('new-session',
            '-d',
            '-c', '/home/julian/projects/logimeter/switch',
            '-n', 'runserver',
            '-s', 'Logimeter')
    sh.tmux('send', 'pact\n')
    sh.tmux('send', 'export DJANGO_SETTINGS_MODULE=logiport.local_settings_dev_jk\n')
    sh.tmux('send', 'python web/manage.py runserver\n')

    sh.tmux('new-window',
            '-n', 'celery')
    sh.tmux('send', 'cd /home/julian/projects/logimeter/switch\n')
    sh.tmux('send', 'pact\n')
    sh.tmux('send', 'export DJANGO_SETTINGS_MODULE=logiport.local_settings_dev_jk\n')
    sh.tmux('send', 'cd web\n')
    sh.tmux('send', CELERY_RR_WORKER_CMD + '\n')

    sh.tmux('new-window',
            '-n', 'db')
    sh.tmux('send', 'cd /home/julian/projects/logimeter/switch\n')
    sh.tmux('send', 'psql -d logiport -U logiport -h localhost\n')

    sh.tmux('new-window',
            '-n', 'main')
    sh.tmux('send', 'cd /home/julian/projects/logimeter/switch\n')

# # noise designer
# 
# if 'NoiseDes' in get_sessions():
#     print('NoiseDes exists')
# else:
#     print('Creating NoiseDesigner session')
#     sh.tmux('new-session',
#             '-d',
#             '-c', '/mnt/Store/projects/noisedesigner',
#             '-n', 'servers',
#             '-s', 'NoiseDes')
#     sh.tmux('send', 'cd /mnt/Store/projects/noisedesigner\n')
#     sh.tmux('send', 'gulp default watch\n')
# 
#     sh.tmux('new-window',
#             '-n', 'noisedesigner')
#     sh.tmux('send', 'cd /mnt/Store/projects/noisedesigner\n')
#     sh.tmux('send', 'git status\n')

print('done')
print(get_sessions())
