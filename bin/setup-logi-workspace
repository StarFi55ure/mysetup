#!/usr/bin/python3

import sh

def get_sessions():
    try:
        sessions_output = sh.tmux('list-sessions')
        sessions = [s.split(' ')[0][:-1] for s in sessions_output]
        return sessions
    except sh.ErrorReturnCode_1:
        return []

# setup Logimeter Work Setup

CELERY_RR_WORKER_CMD = 'celery -A logiport worker -n worker1@%h -l INFO'
if 'Logimeter' in get_sessions():
    print('Logimeter exists')
else:
    print('Creating Logimeter session')
    sh.tmux('new-session',
            '-d',
            '-c', '/home/julian/projects/switch',
            '-n', 'runserver',
            '-s', 'Logimeter')
    sh.tmux('send', 'pact\n')
    sh.tmux('send', 'export DJANGO_SETTINGS_MODULE=logiport.local_settings_dev_jk\n')
    sh.tmux('send', 'python web/manage.py runserver\n')

    sh.tmux('new-window',
            '-n', 'celery')
    sh.tmux('send', 'cd /home/julian/projects/switch\n')
    sh.tmux('send', 'pact\n')
    sh.tmux('send', 'export DJANGO_SETTINGS_MODULE=logiport.local_settings_dev_jk\n')
    sh.tmux('send', 'cd web\n')
    sh.tmux('send', CELERY_RR_WORKER_CMD + '\n')

    sh.tmux('new-window',
            '-n', 'db')
    sh.tmux('send', 'cd /home/julian/projects/switch\n')
    sh.tmux('send', 'psql -d logiport -U logiport -h develdb.logimeter.com\n')

    sh.tmux('new-window',
            '-n', 'main')
    sh.tmux('send', 'cd /home/julian/projects/switch\n')


print('done')
print(get_sessions())
