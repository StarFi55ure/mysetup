#!/usr/bin/env zsh

###################################################
# setup main environment variables
###################################################

export ZSH_SETUP_ROOT=<<<ZSH_SETUP_ROOT>>>

export M2_REPO="$HOME/.m2/repository"
export LESSOPEN="| /usr/share/source-highlight/src-hilite-lesspipe.sh %s"
export LESS="-R"

export EDITOR=vim 

export PATH=$HOME/apps/bin:$PATH
export PATH=$HOME/apps/nodejs/bin:$PATH
export PATH=/usr/local/bin:$PATH

export NVM_DIR=$HOME/.nvm

#export POWERLINE_CONFIG_COMMAND=$HOME/.myvim/bundle/powerline/scripts/powerline-config

# set the TERM env variable
export TERM=xterm-color
if [ -n $TMUX ]; then
    export TERM=screen-256color
fi

# set some shell paths
export SHELL_BIN_ROOT=$ZSH_SETUP_ROOT/bin

export KEYTIMEOUT=1
# # Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh_history

platform=`uname`

###################################################
#setup platform aliases for coreutils commands
###################################################

source $ZSH_SETUP_ROOT/global_aliases.zsh


###################################################
# Setup basic shell features
###################################################
#
setopt histignorealldups sharehistory
setopt interactivecomments

# Use emacs keybindings even if our EDITOR is set to vi
bindkey -e

# make sure I can edit my command lines
autoload -Uz edit-command-line
zle -N edit-command-line
bindkey -r '^Xe'
bindkey '^Xe' edit-command-line

bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^w' backward-kill-word
bindkey '^r' history-incremental-search-backward

# Use modern completion system
autoload -Uz compinit
compinit

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'



###################################################
# setup tmux
###################################################
if [ -x $HOME/apps/tmux/bin/tmux ]; then
    alias tmux=$HOME/apps/tmux/bin/tmux
fi

###################################################
# setup function autoloading 
###################################################

fpath=($ZSH_SETUP_ROOT/funcs $fpath)

# setup my prompt
setopt PROMPT_SUBST
autoload -U colors
colors 

autoload -U colortest
autoload -U spectrum
spectrum

autoload -Uz promptinit
autoload -U prompt_julian_setup
promptinit
prompt julian


################################################################################
# Python Virtualenv system
################################################################################

autoload -U mkvirtualenv
autoload -U workon


################################################################################
# General utility functions
################################################################################

autoload -U chpwd
chpwd_functions=('setup_nodejs')

################################################################################
# NVM stuff
################################################################################

if [[ $platform == 'Darwin' ]]; then
    mkdir -p ~/.nvm
    cp $(brew --prefix nvm)/nvm-exec ~/.nvm/

    source $(brew --prefix nvm)/nvm.sh
elif [[ $platform == 'Linux' ]]; then
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
fi

#################################################################################
# Setup Java stuff
#################################################################################

export PATH="$HOME/.jenv/bin:$PATH"
if which jenv > /dev/null; then eval "$(jenv init -)"; fi

#################################################################################
# Setup pyenv stuff
#################################################################################

export PYENV_VIRTUALENV_DISABLE_PROMPT=1

export PATH="$HOME/.pyenv/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

